@model IEnumerable<EventData>

<style>
    .table {
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 8px; /* Add padding for better readability */
        }
</style>

<table class="table">
    <tr>
        <th><a href="javascript:void(0);" id="eventIDHeader">Event ID</a></th>
        <th><a href="javascript:void(0);" id="eventNameHeader">Event Name</a></th>
        <th><a href="javascript:void(0);" id="dateAndTimeHeader">Date and Time</a></th>
        <th>Location</th>
        <th>Description</th>
    </tr>

    @foreach (var item in @Model)
    {
        <tr>
            <td><a href=/EventData/EventDetails/@item.EventID>@item.EventID</a></td>
            <td>@item.EventName</td>
            <td>@item.DateAndTime</td>
            <td>@item.Location</td>
            <td>@item.Description</td>
        </tr>
    }

</table>

<input type="hidden" id="sortOrder" value="asc" />

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<script>// Function to toggle sorting order and update table
    function sortTableEventID(columnName) {
        // Retrieve the current sorting order from the header text
        var currentOrder = $('#eventIDHeader').text().includes('▼') ? 'desc' : 'asc';

        // Make AJAX request to toggle sorting order
        $.ajax({
            url: '/EventData/SortEvents',
            data: { column: columnName, sortOrder: currentOrder },
            type: 'GET',
            success: function (data) {
                // Replace table content with sorted data
                $('.table tbody').html(data);

                // Update EventID header to indicate sorting order
                $('#eventIDHeader').text('Event ID ' + (currentOrder === 'asc' ? '▼' : '▲'));
            },
            error: function () {
                alert('Error occurred while sorting.');
            }
        });
    }

    // Continuous sorting loop when EventID hyperlink is clicked
    $(document).on('click', '#eventIDHeader', function () {
        // Call sortTable function with 'EventID' column
        sortTableEventID('EventID');
    });</script>

<script>// Function to toggle sorting order and update table
    function sortTableEventName(columnName) {
        // Retrieve the current sorting order from the header text
        var currentOrder = $('#eventNameHeader').text().includes('▼') ? 'desc' : 'asc';

        // Make AJAX request to toggle sorting order
        $.ajax({
            url: '/EventData/SortEvents',
            data: { column: columnName, sortOrder: currentOrder },
            type: 'GET',
            success: function (data) {
                // Replace table content with sorted data
                $('.table tbody').html(data);

                // Update EventName header to indicate sorting order
                $('#eventNameHeader').text('Event Name ' + (currentOrder === 'asc' ? '▼' : '▲'));
            },
            error: function () {
                alert('Error occurred while sorting.');
            }
        });
    }

    // Continuous sorting loop when EventName hyperlink is clicked
    $(document).on('click', '#eventNameHeader', function () {
        // Call sortTableEventName function with 'EventName' column
        sortTableEventName('EventName');
    });</script>

<script>// Function to toggle sorting order and update table
    function sortTableDateAndTime(columnName) {
        // Retrieve the current sorting order from the header text
        var currentOrder = $('#dateAndTimeHeader').text().includes('▼') ? 'desc' : 'asc';
            //('▲') ? 'asc' : 'desc';
        // Make AJAX request to toggle sorting order
        $.ajax({
            url: '/EventData/SortEvents',
            data: { column: columnName, sortOrder: currentOrder },
            type: 'GET',
            success: function (data) {
                // Replace table content with sorted data
                $('.table tbody').html(data);

                // Update Date And Time header to indicate sorting order
                $('#dateAndTimeHeader').text('Date And Time ' + (currentOrder === 'asc' ? '▼' : '▲'));
                    //'desc' ? '▲' : '▼'));
                    //
            },
            error: function () {
                alert('Error occurred while sorting.');
            }
        });
    }

    // Continuous sorting loop when DateAndTime hyperlink is clicked
    $(document).on('click', '#dateAndTimeHeader', function () {
        // Call sortTableDateAndTime function with 'DateAndTime' column
        sortTableDateAndTime('DateAndTime');
    });</script>


