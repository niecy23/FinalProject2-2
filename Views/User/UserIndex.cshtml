@model IEnumerable<User>

<h2>Users</h2>

<div style="display: block">
    <a href="/User/InsertUser/">Create a New User</a>
</div>

<table class="table">
    <tr>
        <th>ID</th>
        <th>First Name</th>
        <th>Last Name</th>
        <th>Email Address</th>
        <th>Phone Number</th>
        @*<th><a href="javascript:void(0);" onclick="sortTable('EventID')">Event ID</a></th>*@
        <th><a href="javascript:void(0);" id="eventIDHeader">Event ID</a></th>
        <th>Event Name</th>
    </tr>

    @foreach (var user in @Model)
    {
        <tr>
            <td><a href=/User/ViewUser/@user.UserID>@user.UserID</a></td>
            <td>@user.FirstName</td>
            <td>@user.LastName</td>
            <td>@user.EmailAddress</td>
            <td>@user.PhoneNumber</td>
            <td>@user.EventID</td>
            <td>@user.EventName</td>
        </tr>
    }

</table>

<input type="hidden" id="sortOrder" value="asc" />

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

@*<script>// Define a global variable to store the current sorting order
    var sortOrder = 'desc';

    // Function to toggle sorting order and update table
    function sortTable(columnName) {
        // Toggle sorting order
        sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';

        // Make AJAX request to retrieve sorted data
        $.ajax({
            url: '/User/SortUsers',
            data: { column: columnName, sortOrder: sortOrder },
            type: 'GET',
            success: function (data) {
                // Replace table content with sorted data
                $('.table tbody').html(data);

                // Update EventID header to indicate sorting order
                $('#eventIDHeader').text('Event ID ' + (sortOrder === 'asc' ? '▲' : '▼'));
            },
            error: function () {
                alert('Error occurred while sorting.');
            }
        });
    }

    // Continuous sorting loop when EventID hyperlink is clicked
    $('#eventIDHeader').on('click', function () {
        // Call sortTable function with 'EventID' column
        sortTable('EventID');
    });</script>*@

@*<script>function sortTable(columnName) {
        // Implement your sorting logic here
        // You can use AJAX to retrieve sorted data from the server and update the table
        // For simplicity, let's assume the server returns a sorted list named 'sortedUsers'

        $.ajax({
            url: '/User/SortUsers',
            data: { column: columnName },
            type: 'GET',
            success: function (data) {
                // Replace the table content with the sorted data
                $('.table tbody').html(data);
            },
            error: function () {
                alert('Error occurred while sorting.');
            }
        });
    }</script>*@


<script>// Function to toggle sorting order and update table
    function sortTable(columnName) {
        // Retrieve the current sorting order from the header text
        var currentOrder = $('#eventIDHeader').text().includes('▼') ? 'desc' : 'asc';

        // Make AJAX request to toggle sorting order
        $.ajax({
            url: '/User/SortUsers',
            data: { column: columnName, sortOrder: currentOrder },
            type: 'GET',
            success: function (data) {
                // Replace table content with sorted data
                $('.table tbody').html(data);

                // Update EventID header to indicate sorting order
                $('#eventIDHeader').text('Event ID ' + (currentOrder === 'asc' ? '▼' : '▲'));
            },
            error: function () {
                alert('Error occurred while sorting.');
            }
        });
    }

    // Continuous sorting loop when EventID hyperlink is clicked
    $(document).on('click', '#eventIDHeader', function () {
        // Call sortTable function with 'EventID' column
        sortTable('EventID');
    });</script>
